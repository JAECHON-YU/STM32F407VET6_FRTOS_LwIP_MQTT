#-------------------------------------------------------------------------------
# General Git ignore rules for Windows, macOS, Linux
#-------------------------------------------------------------------------------
# Operating System files
.DS_Store                   # macOS specific folder metadata
Thumbs.db                   # Windows thumbnail cache
Desktop.ini                 # Windows desktop configuration
*.swp                       # Vim swap files
*~                          # Temporary files created by some editors (e.g., Emacs)
# Visual Studio Code files (mostly user-specific or temporary)
.vscode/cmake-tools-kits.json
.vscode/*.code-workspace    # Ignore workspace files if auto-generated or personal
.vscode/*.log               # VS Code logs
.vscode/User/
.vscode/extensions/         # Local extension cache
.vscode/pylance-*           # Python language server cache (if using Python for scripting/tools)
.vscode/settings.json       # Ignore if settings are highly user-specific.
                            # KEEP this if settings are project-wide (e.g., file exclusions, formatters)
                            # You might want to commit a minimal settings.json with project-specific rules.

#-------------------------------------------------------------------------------
# CMake specific files
#-------------------------------------------------------------------------------
# Build directory generated by CMake
/build/                     # The main build output directory
/out/                       # Another common name for build directory
/bin/                       # If you put binaries directly here
/obj/                       # If you put object files directly here

# CMake cache and intermediate files
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
CTestTestfile.cmake
.cmake/                     # CMake user presets and other internal files

# Cross-platform IDE project files generated by CMake (if not using VS Code)
*.xcodeproj/               # Xcode projects
*.sln                       # Visual Studio solutions
*.vcproj                    # Visual C++ projects
*.vcxproj                   # Visual C++ project files
*.suo                       # Visual Studio Solution User Options
*.user                      # Visual Studio user options
*.ilk                       # Incremental linker files
*.pdb                       # Program database files (debug info)
*.ipdb                      # Incremental program database files
*.iobj                      # Incremental object files
*.cbp                       # Code::Blocks project files
*.code-workspace            # Another possible workspace file
*.pro                       # Qt project files (if using Qt with CMake)
*.creator                   # Qt Creator files

# CPack generated files
_CPack_Packages/

#-------------------------------------------------------------------------------
# STM32 / Embedded Development specific files
#-------------------------------------------------------------------------------
# Compiled firmware and intermediate files
*.bin                       # Binary firmware
*.hex                       # Intel HEX firmware
*.elf                       # Executable and Linkable Format (ELF) for debugging
*.axf                       # ARM Executable Format (AXF)
*.srec                      # SREC firmware
*.map                       # Linker map file
*.lst                       # Assembly listing file
*.dep                       # Dependency files for make
*.d                         # Dependency files for make
*.o                         # Object files
*.obj                       # Object files (Windows style)
*.s                         # Assembler files generated during build

# STM32CubeIDE / TrueSTUDIO / Eclipse project files (if also generated)
# If you are exclusively using VS Code, these are unnecessary.
.project
.cproject
.settings/                  # Eclipse/CDT settings
.metadata/                  # Eclipse workspace metadata

# STM32CubeMX generated backup files (often found in Core/Src or Inc)
*.bak                       # Backup files (e.g., main.c.bak from CubeMX)

# GDB / Debugging specific files (often temporary)
*.gdb
*.log                       # General log files, including debugger logs
*.trace                     # Trace files
core                        # Core dump files

# SEGGER J-Link files
JLinkSettings.ini

#-------------------------------------------------------------------------------
# Dependency management and external tools
#-------------------------------------------------------------------------------
# If you're using a package manager (like conan, vcpkg) to manage dependencies,
# you might need to ignore their specific build/install directories.
# e.g., if using conan:
# conanbuildinfo.cmake
# conanfile.lock
# conan/

# If you include vendor libraries or SDKs directly in your project and don't
# want to commit them (e.g., very large SDKs that are downloaded separately).
# However, for STM32, the Drivers folder (CMSIS, HAL, LL) is usually committed.
# vendor/
# lib/

#-------------------------------------------------------------------------------
# Miscellaneous
#-------------------------------------------------------------------------------
.history/                   # Common directory for local history/snapshots (e.g., some IDEs create this)
*.pyc                       # Python compiled files
__pycache__/                # Python cache directory
build/Debug/.ninja_deps
